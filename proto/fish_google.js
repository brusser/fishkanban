/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

goog.provide('proto.fishModel.Fish');
goog.provide('proto.fishModel.Fish.Fish_State');
goog.provide('proto.fishModel.Fish.Fish_Type');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Message');


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.fishModel.Fish = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.fishModel.Fish.repeatedFields_, null);
};
goog.inherits(proto.fishModel.Fish, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.fishModel.Fish.displayName = 'proto.fishModel.Fish';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.fishModel.Fish.repeatedFields_ = [5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.fishModel.Fish.prototype.toObject = function(opt_includeInstance) {
  return proto.fishModel.Fish.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.fishModel.Fish} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fishModel.Fish.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    dateTime: jspb.Message.getFieldWithDefault(msg, 2, ""),
    type: jspb.Message.getFieldWithDefault(msg, 3, 0),
    state: jspb.Message.getFieldWithDefault(msg, 4, 0),
    tagList: jspb.Message.getRepeatedField(msg, 5),
    details: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.fishModel.Fish}
 */
proto.fishModel.Fish.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.fishModel.Fish;
  return proto.fishModel.Fish.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.fishModel.Fish} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.fishModel.Fish}
 */
proto.fishModel.Fish.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDateTime(value);
      break;
    case 3:
      var value = /** @type {!proto.fishModel.Fish.Fish_Type} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 4:
      var value = /** @type {!proto.fishModel.Fish.Fish_State} */ (reader.readEnum());
      msg.setState(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.addTag(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setDetails(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.fishModel.Fish.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.fishModel.Fish.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.fishModel.Fish} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fishModel.Fish.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getDateTime();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getState();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getTagList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      5,
      f
    );
  }
  f = message.getDetails();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.fishModel.Fish.Fish_Type = {
  SALMON: 0,
  TUNA: 1
};

/**
 * @enum {number}
 */
proto.fishModel.Fish.Fish_State = {
  NEW: 0,
  PROCESSING: 1,
  COMPLETED: 2
};

/**
 * optional uint64 id = 1;
 * @return {number}
 */
proto.fishModel.Fish.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.fishModel.Fish.prototype.setId = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string date_time = 2;
 * @return {string}
 */
proto.fishModel.Fish.prototype.getDateTime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.fishModel.Fish.prototype.setDateTime = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional Fish_Type type = 3;
 * @return {!proto.fishModel.Fish.Fish_Type}
 */
proto.fishModel.Fish.prototype.getType = function() {
  return /** @type {!proto.fishModel.Fish.Fish_Type} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {!proto.fishModel.Fish.Fish_Type} value */
proto.fishModel.Fish.prototype.setType = function(value) {
  jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional Fish_State state = 4;
 * @return {!proto.fishModel.Fish.Fish_State}
 */
proto.fishModel.Fish.prototype.getState = function() {
  return /** @type {!proto.fishModel.Fish.Fish_State} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {!proto.fishModel.Fish.Fish_State} value */
proto.fishModel.Fish.prototype.setState = function(value) {
  jspb.Message.setProto3EnumField(this, 4, value);
};


/**
 * repeated string tag = 5;
 * @return {!Array.<string>}
 */
proto.fishModel.Fish.prototype.getTagList = function() {
  return /** @type {!Array.<string>} */ (jspb.Message.getRepeatedField(this, 5));
};


/** @param {!Array.<string>} value */
proto.fishModel.Fish.prototype.setTagList = function(value) {
  jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.fishModel.Fish.prototype.addTag = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


proto.fishModel.Fish.prototype.clearTagList = function() {
  this.setTagList([]);
};


/**
 * optional string details = 6;
 * @return {string}
 */
proto.fishModel.Fish.prototype.getDetails = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.fishModel.Fish.prototype.setDetails = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};


